% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/SeuratMarkers-methods.R
\name{SeuratMarkers}
\alias{SeuratMarkers}
\alias{SeuratMarkersPerCluster}
\alias{SeuratMarkers,data.frame-method}
\alias{SeuratMarkersPerCluster,data.frame-method}
\title{Sanitize Seurat markers}
\usage{
SeuratMarkers(object, ...)

SeuratMarkersPerCluster(object, ...)

\S4method{SeuratMarkers}{data.frame}(object, ranges, alphaThreshold = 0.05)

\S4method{SeuratMarkersPerCluster}{data.frame}(object, ranges, alphaThreshold = 0.05)
}
\arguments{
\item{object}{Unmodified Seurat marker return \code{data.frame}.
\itemize{
\item \code{SeuratMarkers()}: \code{\link[Seurat:FindMarkers]{Seurat::FindMarkers()}}.
\item \code{SeuratMarkersPerCluster()}: \code{\link[Seurat:FindAllMarkers]{Seurat::FindAllMarkers()}}.
}}

\item{...}{Additional arguments.}

\item{ranges}{\code{GenomicRanges}.
Gene annotations. Names must correspond to the rownames. The function will
automatically subset the ranges and arrange them alphabetically.}

\item{alphaThreshold}{\code{numeric(1)} or \code{NULL}.
Adjusted P value ("alpha") cutoff. If left \code{NULL}, will use the cutoff
defined in the object.}
}
\value{
\code{SeuratMarkers}.
}
\description{
This generator function is designed to take the original return from a Seurat
marker analysis and add corresponding gene annotations.
}
\details{
For \code{\link[Seurat:FindAllMarkers]{Seurat::FindAllMarkers()}} return, rownames are correctly returned
in the \code{gene} column.
}
\note{
Updated 2022-06-09.
}
\examples{
data(Seurat, package = "AcidTest")

## Seurat ====
object <- Seurat
ranges <- rowRanges(object)

## `FindMarkers()` return.
invisible(capture.output({
    markers <- Seurat::FindMarkers(
        object = object,
        ident.1 = "1",
        ident.2 = NULL
    )
}))
x <- SeuratMarkers(object = markers, ranges = ranges)
summary(x)

## `FindAllMarkers()` return.
invisible(capture.output(suppressWarnings({
    markers <- Seurat::FindAllMarkers(object)
})))
x <- SeuratMarkersPerCluster(object = markers, ranges = ranges)
summary(x)
}
